$date
	Tue Aug  8 16:42:34 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module fifo $end
$var wire 1 ! clk $end
$var wire 8 " din [7:0] $end
$var wire 1 # rd_en $end
$var wire 1 $ rst $end
$var wire 1 % wr_en $end
$var wire 1 & full $end
$var wire 1 ' empty $end
$var wire 5 ( data_count [4:0] $end
$var parameter 32 ) FIFO_DEPTH $end
$var parameter 32 * FIFO_WIDTH $end
$var reg 6 + counter [5:0] $end
$var reg 8 , dout [7:0] $end
$var reg 5 - read_ptr [4:0] $end
$var reg 1 . valid $end
$var reg 5 / write_ptr [4:0] $end
$var integer 32 0 idx [31:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 1 \memory[0] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 2 \memory[1] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 3 \memory[2] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 4 \memory[3] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 5 \memory[4] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 6 \memory[5] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 7 \memory[6] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 8 \memory[7] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 9 \memory[8] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 : \memory[9] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 ; \memory[10] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 < \memory[11] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 = \memory[12] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 > \memory[13] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 ? \memory[14] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 @ \memory[15] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 A \memory[16] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 B \memory[17] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 C \memory[18] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 D \memory[19] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 E \memory[20] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 F \memory[21] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 G \memory[22] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 H \memory[23] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 I \memory[24] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 J \memory[25] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 K \memory[26] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 L \memory[27] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 M \memory[28] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 N \memory[29] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 O \memory[30] [7:0] $end
$upscope $end
$scope module fifo $end
$var reg 8 P \memory[31] [7:0] $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 *
b100000 )
$end
#0
$dumpvars
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
b100000 0
b0 /
0.
b0 -
bx ,
b0 +
b0 (
1'
0&
z%
1$
z#
bz "
1!
$end
#5000
0!
#10000
1!
#15000
0!
#20000
1!
#25000
0!
#30000
1!
#35000
0!
#40000
1!
#45000
0!
#50000
b0 "
1!
0#
1%
0$
#55000
0!
#60000
0%
b1 (
b0 1
b1 /
0'
b1 +
1!
#65000
0!
#70000
b10 "
1%
1!
#75000
0!
#80000
0%
b10 (
b10 2
b10 /
b10 +
1!
#85000
0!
#90000
b100 "
1%
1!
#95000
0!
#100000
0%
b11 (
b100 3
b11 /
b11 +
1!
#105000
0!
#110000
b110 "
1%
1!
#115000
0!
#120000
0%
b100 (
b110 4
b100 /
b100 +
1!
#125000
0!
#130000
b1000 "
1%
1!
#135000
0!
#140000
0%
b101 (
b1000 5
b101 /
b101 +
1!
#145000
0!
#150000
b1010 "
1%
1!
#155000
0!
#160000
0%
b110 (
b1010 6
b110 /
b110 +
1!
#165000
0!
#170000
b1100 "
1%
1!
#175000
0!
#180000
0%
b111 (
b1100 7
b111 /
b111 +
1!
#185000
0!
#190000
b1110 "
1%
1!
#195000
0!
#200000
0%
b1000 (
b1110 8
b1000 /
b1000 +
1!
#205000
0!
#210000
b10000 "
1%
1!
#215000
0!
#220000
0%
b1001 (
b10000 9
b1001 /
b1001 +
1!
#225000
0!
#230000
b10010 "
1%
1!
#235000
0!
#240000
0%
b1010 (
b10010 :
b1010 /
b1010 +
1!
#245000
0!
#250000
b10100 "
1%
1!
#255000
0!
#260000
0%
b1011 (
b10100 ;
b1011 /
b1011 +
1!
#265000
0!
#270000
b10110 "
1%
1!
#275000
0!
#280000
0%
b1100 (
b10110 <
b1100 /
b1100 +
1!
#285000
0!
#290000
b11000 "
1%
1!
#295000
0!
#300000
0%
b1101 (
b11000 =
b1101 /
b1101 +
1!
#305000
0!
#310000
b11010 "
1%
1!
#315000
0!
#320000
0%
b1110 (
b11010 >
b1110 /
b1110 +
1!
#325000
0!
#330000
b11100 "
1%
1!
#335000
0!
#340000
0%
b1111 (
b11100 ?
b1111 /
b1111 +
1!
#345000
0!
#350000
b11110 "
1%
1!
#355000
0!
#360000
0%
b10000 (
b11110 @
b10000 /
b10000 +
1!
#365000
0!
#370000
b100000 "
1%
1!
#375000
0!
#380000
0%
b10001 (
b100000 A
b10001 /
b10001 +
1!
#385000
0!
#390000
b100010 "
1%
1!
#395000
0!
#400000
0%
b10010 (
b100010 B
b10010 /
b10010 +
1!
#405000
0!
#410000
b100100 "
1%
1!
#415000
0!
#420000
0%
b10011 (
b100100 C
b10011 /
b10011 +
1!
#425000
0!
#430000
b100110 "
1%
1!
#435000
0!
#440000
0%
b10100 (
b100110 D
b10100 /
b10100 +
1!
#445000
0!
#450000
b101000 "
1%
1!
#455000
0!
#460000
0%
b10101 (
b101000 E
b10101 /
b10101 +
1!
#465000
0!
#470000
b101010 "
1%
1!
#475000
0!
#480000
0%
b10110 (
b101010 F
b10110 /
b10110 +
1!
#485000
0!
#490000
b101100 "
1%
1!
#495000
0!
#500000
0%
b10111 (
b101100 G
b10111 /
b10111 +
1!
#505000
0!
#510000
b101110 "
1%
1!
#515000
0!
#520000
0%
b11000 (
b101110 H
b11000 /
b11000 +
1!
#525000
0!
#530000
b110000 "
1%
1!
#535000
0!
#540000
0%
b11001 (
b110000 I
b11001 /
b11001 +
1!
#545000
0!
#550000
b110010 "
1%
1!
#555000
0!
#560000
0%
b11010 (
b110010 J
b11010 /
b11010 +
1!
#565000
0!
#570000
b110100 "
1%
1!
#575000
0!
#580000
0%
b11011 (
b110100 K
b11011 /
b11011 +
1!
#585000
0!
#590000
b110110 "
1%
1!
#595000
0!
#600000
0%
b11100 (
b110110 L
b11100 /
b11100 +
1!
#605000
0!
#610000
b111000 "
1%
1!
#615000
0!
#620000
0%
b11101 (
b111000 M
b11101 /
b11101 +
1!
#625000
0!
#630000
b111010 "
1%
1!
#635000
0!
#640000
0%
b11110 (
b111010 N
b11110 /
b11110 +
1!
#645000
0!
#650000
b111100 "
1%
1!
#655000
0!
#660000
0%
b11111 (
b111100 O
b11111 /
b11111 +
1!
#665000
0!
#670000
b111110 "
1%
1!
#675000
0!
#680000
0%
b0 (
b111110 P
b0 /
1&
b100000 +
1!
#685000
0!
#690000
1!
#695000
0!
#700000
1!
#705000
0!
#710000
1!
#715000
0!
#720000
1!
#725000
0!
#730000
1!
#735000
0!
#740000
1!
#745000
0!
#750000
1!
#755000
0!
#760000
1!
#765000
0!
#770000
1!
#775000
0!
#780000
1!
#785000
0!
#790000
1!
#795000
0!
#800000
1!
#805000
0!
#810000
1!
#815000
0!
#820000
1!
#825000
0!
#830000
1!
#835000
0!
#840000
1!
#845000
0!
#850000
1!
#855000
0!
#860000
1!
#865000
0!
#870000
1!
#875000
0!
#880000
1#
1!
#885000
0!
#890000
0#
b11111 (
1.
b0 ,
b1 -
0&
b11111 +
1!
#895000
0!
#900000
1#
0.
1!
#905000
0!
#910000
0#
b11110 (
1.
b10 ,
b10 -
b11110 +
1!
#915000
0!
#920000
1#
0.
1!
#925000
0!
#930000
0#
b11101 (
1.
b100 ,
b11 -
b11101 +
1!
#935000
0!
#940000
1#
0.
1!
#945000
0!
#950000
0#
b11100 (
1.
b110 ,
b100 -
b11100 +
1!
#955000
0!
#960000
1#
0.
1!
#965000
0!
#970000
0#
b11011 (
1.
b1000 ,
b101 -
b11011 +
1!
#975000
0!
#980000
1#
0.
1!
#985000
0!
#990000
0#
b11010 (
1.
b1010 ,
b110 -
b11010 +
1!
#995000
0!
#1000000
1#
0.
1!
#1005000
0!
#1010000
0#
b11001 (
1.
b1100 ,
b111 -
b11001 +
1!
#1015000
0!
#1020000
1#
0.
1!
#1025000
0!
#1030000
0#
b11000 (
1.
b1110 ,
b1000 -
b11000 +
1!
#1035000
0!
#1040000
1#
0.
1!
#1045000
0!
#1050000
0#
b10111 (
1.
b10000 ,
b1001 -
b10111 +
1!
#1055000
0!
#1060000
1#
0.
1!
#1065000
0!
#1070000
0#
b10110 (
1.
b10010 ,
b1010 -
b10110 +
1!
#1075000
0!
#1080000
1#
0.
1!
#1085000
0!
#1090000
0#
b10101 (
1.
b10100 ,
b1011 -
b10101 +
1!
#1095000
0!
#1100000
1#
0.
1!
#1105000
0!
#1110000
0#
b10100 (
1.
b10110 ,
b1100 -
b10100 +
1!
#1115000
0!
#1120000
1#
0.
1!
#1125000
0!
#1130000
0#
b10011 (
1.
b11000 ,
b1101 -
b10011 +
1!
#1135000
0!
#1140000
1#
0.
1!
#1145000
0!
#1150000
0#
b10010 (
1.
b11010 ,
b1110 -
b10010 +
1!
#1155000
0!
#1160000
1#
0.
1!
#1165000
0!
#1170000
0#
b10001 (
1.
b11100 ,
b1111 -
b10001 +
1!
#1175000
0!
#1180000
1#
0.
1!
#1185000
0!
#1190000
0#
b10000 (
1.
b11110 ,
b10000 -
b10000 +
1!
#1195000
0!
#1200000
1#
0.
1!
#1205000
0!
#1210000
0#
b1111 (
1.
b100000 ,
b10001 -
b1111 +
1!
#1215000
0!
#1220000
1#
0.
1!
#1225000
0!
#1230000
0#
b1110 (
1.
b100010 ,
b10010 -
b1110 +
1!
#1235000
0!
#1240000
1#
0.
1!
#1245000
0!
#1250000
0#
b1101 (
1.
b100100 ,
b10011 -
b1101 +
1!
#1255000
0!
#1260000
1#
0.
1!
#1265000
0!
#1270000
0#
b1100 (
1.
b100110 ,
b10100 -
b1100 +
1!
#1275000
0!
#1280000
1#
0.
1!
#1285000
0!
#1290000
0#
b1011 (
1.
b101000 ,
b10101 -
b1011 +
1!
#1295000
0!
#1300000
1#
0.
1!
#1305000
0!
#1310000
0#
b1010 (
1.
b101010 ,
b10110 -
b1010 +
1!
#1315000
0!
#1320000
1#
0.
1!
#1325000
0!
#1330000
0#
b1001 (
1.
b101100 ,
b10111 -
b1001 +
1!
#1335000
0!
#1340000
1#
0.
1!
#1345000
0!
#1350000
0#
b1000 (
1.
b101110 ,
b11000 -
b1000 +
1!
#1355000
0!
#1360000
1#
0.
1!
#1365000
0!
#1370000
0#
b111 (
1.
b110000 ,
b11001 -
b111 +
1!
#1375000
0!
#1380000
1#
0.
1!
#1385000
0!
#1390000
0#
b110 (
1.
b110010 ,
b11010 -
b110 +
1!
#1395000
0!
#1400000
1#
0.
1!
#1405000
0!
#1410000
0#
b101 (
1.
b110100 ,
b11011 -
b101 +
1!
#1415000
0!
#1420000
1#
0.
1!
#1425000
0!
#1430000
0#
b100 (
1.
b110110 ,
b11100 -
b100 +
1!
#1435000
0!
#1440000
1#
0.
1!
#1445000
0!
#1450000
0#
b11 (
1.
b111000 ,
b11101 -
b11 +
1!
#1455000
0!
#1460000
1#
0.
1!
#1465000
0!
#1470000
0#
b10 (
1.
b111010 ,
b11110 -
b10 +
1!
#1475000
0!
#1480000
1#
0.
1!
#1485000
0!
#1490000
0#
b1 (
1.
b111100 ,
b11111 -
b1 +
1!
#1495000
0!
#1500000
1#
0.
1!
#1505000
0!
#1510000
b0 (
1.
b111110 ,
b0 -
1'
b0 +
1!
#1510001
